#!/usr/bin/env python3
import sys

MIN_COL_WIDTH = 3 # if less than 2 then the logic going wild

def centre_justify(s, i):
    space_len = i-len(s)
    front_space_len = int(space_len / 2)
    back_space_len = space_len - front_space_len
    return ' '*front_space_len + str(s) + ' '*back_space_len


def left_justify(s, i):
    return str(s) + ' '*(i-len(s))


def right_justify(s, i):
    return ' '*(i-len(s)) + str(s)


def proc(entry, width, align):
    if align.startswith(":") and not align.endswith(":"):
        if entry == align and entry:
            return ":" + "-"*(width-1)
        else:
            return left_justify(entry, width)
    elif align.endswith(":") and not align.startswith(":"):
        if entry == align and entry:
            return "-"*(width-1) + ":"
        else:
            return right_justify(entry, width)
    elif align.endswith(":") and align.startswith(":"):
        if entry == align and entry:
            return ":" + "-"*(width-2) + ":"
        else:
            return centre_justify(entry, width)
    else:
        if entry == align and entry:
            return ":" + "-"*(width-1)
        else:
            return left_justify(entry, width)


input_lines = [row for row in sys.stdin]
initial_indentation = len(input_lines[0]) - len(input_lines[0].lstrip())

# convert tab to |
input_lines = [row.replace('\t','|') for row in input_lines]

# add beginning and ending |
if input_lines[0].rstrip()[-1] != '|':
    input_lines = [ x + '|' for x in input_lines ]
if input_lines[0].lstrip()[0] != '|':
    input_lines = [ '|' + x for x in input_lines ]

# normalized the number of delimitors in all lines
num_of_delim = max([ x.count('|') for x in input_lines ])
input_lines = [ x + '|'*(num_of_delim-x.count('|')) for x in input_lines ]

if input_lines[0].lstrip()[0] != '|' and input_lines[0].rstrip()[-1] != '|':
    input_lines = [ '|'+row+'|' for row in input_lines ]

rows = [[el.strip() for el in row.split('|')] for row in input_lines if row.strip()]

# skip header separator rows
rows_excl_line = []
for line_num in range(0,len(rows)):
    if (rows[line_num][1].strip()[:2] != ":-" and rows[line_num][1].strip()[-2:] != "-:" ):
        rows_excl_line.append(rows[line_num])

# insert header separator
rows = rows_excl_line[:1] + [[""]+[":---" for x in rows[0]][1:-1]+[""]] + rows_excl_line[1:]

col_widths = [max(max(map(len, column)),MIN_COL_WIDTH) for column in zip(*rows_excl_line)] # make sure there is a minimum width of MIN_COL_WIDTH

# limit max column width
if len(sys.argv) > 1:
    max_len = int(sys.argv[1])
    max_len = max(max_len,MIN_COL_WIDTH)
    rows = [[ x[:max_len] for x in row] for row in rows]
    col_widths = [min(col_width,max_len) for col_width in col_widths ]

for row in rows:
    out_list = [proc(entry,width,align) for entry,width,align in zip(row, col_widths, rows[1])]

    s = " | ".join(out_list)
    s = ' '*initial_indentation + s.lstrip().rstrip()
    print(s)
