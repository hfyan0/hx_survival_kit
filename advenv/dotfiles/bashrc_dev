# User specific aliases and functions
VISUAL="vim"
EDITOR="vim"
HISTCONTROL=ignoredups:ignorespace
unset HISTFILE

#unalias -a
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias h='head'
alias t='tail'
alias vd='vimdiff'
alias l='ls --color=auto -F'
alias ll='ls -lh --color=auto -F'
alias lll='ls -l --color=auto -F'
alias lla='ls -lha --color=auto -F'
alias C='cat'
alias ch7='chmod 755'
alias ch6='chmod 644'
alias ch600='chmod 600'
alias rf='rm -ri'
alias tf='tail -500f'
alias g='grep --color=auto'
alias gv='grep -v'
alias eg="egrep -a --color"
alias md='mkdir -p'
alias md5='md5sum'
alias tp='top'
alias ifc='ifconfig | less'
alias wcl='wc -l'
alias p='pwd'
alias e='echo'
alias psg='ps -eo user,pid,vsize,rss,lstart,etime,fname,cmd --sort user | grep'
alias xa='tr "\n" "\0" | xargs -0 -n 1'
alias xak='awk "{print \$2}" | tr "\n" "\0" | xargs -0 kill'
alias xask='awk "{print \$2}" | tr "\n" "\0" | xargs -0 sudo kill'
alias u='cd ..; ls --color=auto -F'
alias uu='cd ../..; ls --color=auto -F'
alias uuu='cd ../../..; ls --color=auto -F'
alias uuuu='cd ../../../..; ls --color=auto -F'
alias uuuuu='cd ../../../../..; ls --color=auto -F'
alias f='find .'
alias ff='find . -type f'
alias fd='find . -type d'
alias suq='sort | uniq'
alias les='less'
alias ltr='ls -lhtrF --color=auto'
alias dfh='df -Th'
alias mc='mc --nocolor'
alias ctl='crontab -l | less'
alias cte='VISUAL=vim crontab -e'
alias rtn='route -n'
alias dus='du -sh .'
alias dush='du -sh * | sort -h'
#alias vw='vim -R'
alias vw='view'
alias rd='rmdir'
alias gt='tig'
alias pmi='yum install'
alias pms='yum search'
alias pmr='yum remove'
alias pmq='rpm -qa'
unset -f c; c() {
  cd $@
  ls --color=auto -F
}
unset -f i; i() {
  cd $(echo $(ls -Fd ../*$1* | grep "/$") | awk '{print $1}')
  ls --color=auto -F
}

unset -f v; v() {
  if [[ -n $(which vim 2> /dev/null) ]]
  then
      CMD="vim -p"
  else
      CMD="vi"
  fi

  if [[ $# -eq 0 ]]
  then
      $CMD $(cat -) < /dev/tty
  else
      $CMD $@
  fi
}

unset -f pf; pf() {
  echo $(pwd)/$(echo $@)
}
unset -f gsc; gsc() {
    if [[ -e $(which rg) ]]
    then
        find . -type f ! -name '*.*' | xargs grep --color=auto $@
        rg -tpy -tc -tcpp -tconfig -tjs -tjava -thtml -txml -tphp -tcs -tkotlin -tjson -tyaml -tsql -tcmake -tmake -tmd -tsh $@
    else
        find . -type f | tr "\n" "\0" | xargs -0 grep --color=auto $@
    fi
}
unset -f mvb; mvb(){
    if [[ -e $1 ]]
    then
        if [[ $1 == *"_bk_20"* ]]
        then
            ori_name=$(echo $1 | sed -e 's/_bk_20.*$//')
            mv $1 $ori_name
        else
            local thisdir=$(pwd)
            local fldr=$(dirname $1)
            local bnm=$(basename $1)
            cd $fldr
            mv $bnm $bnm"_"$(date +'%Y%m%d_%H%M%S')
            ls --color=auto -F --group-directories-first
            cd $thisdir
        fi
    fi
}
unset -f lg; lg(){
    ls *"$@"*
}
unset -f cpb; cpb(){
    if [[ -e $1 ]]
    then
        local thisdir=$(pwd)
        local fldr=$(dirname $1)
        local bnm=$(basename $1)
        cd $fldr
        cp -rp $bnm $bnm"_"$(date +'%Y%m%d_%H%M%S')
        ls --color=auto -F --group-directories-first
        cd $thisdir
    fi
}
unset -f m5; m5() {
    if [[ $# -eq 0 ]]
    then
        ls -p | grep -v / | xargs md5sum
    else
        md5sum $@
    fi
}

unset -f tob64; tob64() {
    if [[ -d $1 ]]
    then
        indir=${1%/}
        zip -9r ${indir}.zip ${indir} > /dev/null 2>&1
        cat ${indir}.zip | base64 > ${indir}.zip.b64.txt
        echo ${indir}.zip.b64.txt
        rm -f ${indir}.zip
    elif [[ -f $1 ]]
    then
        tmpdir=$(mktemp -d)
        infile=$1
        cp ${infile} ${tmpdir}
        zip -9r ${infile}.zip ${tmpdir} > /dev/null 2>&1
        cat ${infile}.zip | base64 > ${infile}.zip.b64.txt
        echo ${infile}.zip.b64.txt
        rm -rf ${tmpdir}
    fi
}

unset -f fromb64; fromb64() {
    pwd=$(pwd)

    if [[ -n $1 ]]
    then
        if [[ -f $(pwd)/$1 ]]
        then
            b64input=$(pwd)/$1
        else
            b64input=$1
        fi
    else
        b64input=$(mktemp)
        vi -u NONE $b64input
    fi

    echo -n "Enter original type [1=zip|2=file]: "
    read resp

    if [[ $resp -eq 1 ]]
    then
        pwd=$(pwd)
        tmpfolder=$(mktemp -d)
        cd $tmpfolder
        cat $b64input | base64 --decode > tmp.zip
        unzip tmp.zip
        rm -rf tmp.zip
        cd ..
        mv $tmpfolder $pwd
        echo $tmpfolder
    elif [[ $resp -eq 2 ]]
    then
        echo -n "Enter Output Filename: "
        read outfile
        if [[ -n $outfile ]]
        then
            cat $b64input | base64 --decode > $outfile
        fi
    fi

    if [[ -n $1 ]]
    then
        rm -f $b64input
    fi

    cd $pwd
}

alias    w0='watch --color -n 0 '
alias    w1='watch --color -n 1 '
alias    w2='watch --color -n 2 '
alias    w3='watch --color -n 3 '
alias    w5='watch --color -n 5 '
alias   w10='watch --color -n 10'
alias   w20='watch --color -n 20'
alias   w30='watch --color -n 30'
alias   w50='watch --color -n 50'
alias   w60='watch --color -n 60'
alias  w120='watch --color -n 120'
alias  w300='watch --color -n 300'

alias   w0_='watch --color -n 0 '
alias   w1_='watch --color -n 1 '
alias   w2_='watch --color -n 2 '
alias   w3_='watch --color -n 3 '
alias   w5_='watch --color -n 5 '
alias  w10_='watch --color -n 10'
alias  w20_='watch --color -n 20'
alias  w30_='watch --color -n 30'
alias  w50_='watch --color -n 50'
alias  w60_='watch --color -n 60'
alias w120_='watch --color -n 120'
alias w300_='watch --color -n 300'

unset -f gs; gs() {
    git remote -v
    echo
    git branch -a
    echo
    git status -sb
}

unset -f hold; hold() {
    while [ 1 ]
    do
        date
        echo "--------------------------------------------------"
        pwd
        echo "--------------------------------------------------"
        ifconfig | grep 192
        echo "--------------------------------------------------"
        df -h | grep root
        echo "--------------------------------------------------"
        sleep 1
        clear
    done
}

export PS1="\n[\D{%Y-%m-%d %H:%M:%S}] \w\n\h \u $ "
LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:';
export LS_COLORS

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi
